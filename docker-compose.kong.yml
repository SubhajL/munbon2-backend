version: '3.9'

# Kong API Gateway Configuration for Munbon Backend
# Separate file to keep main docker-compose.yml cleaner

services:
  # Kong Database (PostgreSQL)
  kong-database:
    image: postgres:15-alpine
    container_name: munbon-kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - munbon-network

  # Kong Database Migration
  kong-migration:
    image: kong:3.4
    container_name: munbon-kong-migration
    command: kong migrations bootstrap
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    networks:
      - munbon-network
    restart: on-failure

  # Kong API Gateway
  kong:
    image: kong:3.4
    container_name: munbon-kong
    depends_on:
      kong-migration:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      # Performance optimizations
      KONG_NGINX_WORKER_PROCESSES: auto
      KONG_NGINX_WORKER_CONNECTIONS: 10240
      # Security
      KONG_TRUSTED_IPS: 0.0.0.0/0,::/0
      KONG_REAL_IP_HEADER: X-Forwarded-For
      KONG_REAL_IP_RECURSIVE: on
      # Plugins
      KONG_PLUGINS: bundled,jwt,oauth2,rate-limiting,cors,request-transformer,response-transformer,prometheus
    volumes:
      - ./infrastructure/kong:/kong/declarative
      - ./infrastructure/kong/plugins:/usr/local/share/lua/5.1/kong/plugins
    ports:
      - "8000:8000"  # Proxy port
      - "8443:8443"  # Proxy SSL port
      - "8001:8001"  # Admin API
      - "8444:8444"  # Admin API SSL
      - "8002:8002"  # Kong Manager (GUI)
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - munbon-network

  # Konga - Kong Admin GUI (Alternative to Kong Manager)
  konga:
    image: pantsel/konga:latest
    container_name: munbon-konga
    environment:
      NODE_ENV: development
      TOKEN_SECRET: km1234567890
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_PORT: 5432
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: konga
    depends_on:
      - kong
    ports:
      - "1337:1337"
    networks:
      - munbon-network

  # External API Service
  external-api:
    build:
      context: ./services/sensor-data
      dockerfile: Dockerfile
    container_name: munbon-external-api
    environment:
      NODE_ENV: development
      API_PORT: 3000
      SERVICE_NAME: external-api
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 7
      # TimescaleDB
      TIMESCALE_HOST: timescaledb
      TIMESCALE_PORT: 5432
      TIMESCALE_DB: munbon_timescale
      TIMESCALE_USER: postgres
      TIMESCALE_PASSWORD: postgres
      # Internal services
      AUTH_SERVICE: http://auth-service:3001
      SENSOR_SERVICE: http://sensor-service:3003
      GIS_SERVICE: http://gis-service:3007
      WATER_LEVEL_SERVICE: http://water-level-service:3008
      MOISTURE_SERVICE: http://moisture-service:3005
      WEATHER_SERVICE: http://weather-service:3006
      ROS_SERVICE: http://ros-service:3047
      RID_MS_SERVICE: http://rid-ms-service:3009
      # API Keys
      INTERNAL_API_KEY: munbon-internal-f3b89263126548
    command: node src/unified-api-enhanced.js
    volumes:
      - ./services/sensor-data:/app
    networks:
      - munbon-network
    depends_on:
      - kong
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  kong-db-data:
    driver: local

networks:
  munbon-network:
    external: true
    name: munbon-backend_default