apiVersion: v1
kind: Service
metadata:
  name: redis-commander
  namespace: munbon-databases
spec:
  type: ClusterIP
  ports:
  - port: 8081
    targetPort: 8081
  selector:
    app: redis-commander
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-commander
  namespace: munbon-databases
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-commander
  template:
    metadata:
      labels:
        app: redis-commander
    spec:
      containers:
      - name: redis-commander
        image: rediscommander/redis-commander:latest
        ports:
        - containerPort: 8081
        env:
        - name: REDIS_HOSTS
          value: "master:redis-0.redis:6379:0:$(REDIS_PASSWORD),replica1:redis-1.redis:6379:0:$(REDIS_PASSWORD),replica2:redis-2.redis:6379:0:$(REDIS_PASSWORD)"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-password
        - name: HTTP_USER
          value: admin
        - name: HTTP_PASSWORD
          value: admin123  # Change in production
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redis-commander
  namespace: munbon-databases
  annotations:
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: redis-commander-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
spec:
  ingressClassName: nginx
  rules:
  - host: redis.munbon.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: redis-commander
            port:
              number: 8081