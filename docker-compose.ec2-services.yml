# Docker Compose for Services using EC2 Database
# Uses simple Node.js images to avoid build issues

services:
  # Redis (Local)
  redis:
    image: redis:7-alpine
    container_name: munbon-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Sensor Data Service
  sensor-data:
    image: node:18-alpine
    container_name: munbon-sensor-data
    working_dir: /app
    volumes:
      - ./services/sensor-data:/app
    environment:
      PORT: 3003
      NODE_ENV: development
      TIMESCALE_HOST: 43.209.22.250
      TIMESCALE_PORT: 5432
      TIMESCALE_DB: sensor_data
      TIMESCALE_USER: postgres
      TIMESCALE_PASSWORD: P@ssw0rd123!
      REDIS_URL: redis://redis:6379
      VALID_TOKENS: munbon-ridr-water-level:water-level,munbon-m2m-moisture:moisture
    command: sh -c "npm install && npm run dev"
    ports:
      - "3003:3003"
    depends_on:
      - redis

  # Auth Service
  auth:
    image: node:18-alpine
    container_name: munbon-auth
    working_dir: /app
    volumes:
      - ./services/auth:/app
    environment:
      PORT: 3001
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:P@ssw0rd123!@43.209.22.250:5432/munbon_dev?schema=auth
      REDIS_URL: redis://redis:6379
      JWT_SECRET: test-secret
    command: sh -c "npm install && npm run dev"
    ports:
      - "3001:3001"
    depends_on:
      - redis

  # GIS Service
  gis:
    image: node:18-alpine
    container_name: munbon-gis
    working_dir: /app
    volumes:
      - ./services/gis:/app
    environment:
      PORT: 3007
      NODE_ENV: development
      POSTGRES_HOST: 43.209.22.250
      POSTGRES_PORT: 5432
      POSTGRES_DB: munbon_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: P@ssw0rd123!
      GIS_SCHEMA: gis
    command: sh -c "npm install && npm run dev"
    ports:
      - "3007:3007"
    depends_on:
      - redis

  # ROS Service
  ros:
    image: node:18-alpine
    container_name: munbon-ros
    working_dir: /app
    volumes:
      - ./services/ros:/app
    environment:
      PORT: 3047
      NODE_ENV: development
      DB_HOST: 43.209.22.250
      DB_PORT: 5432
      DB_NAME: munbon_dev
      DB_SCHEMA: ros
      DB_USER: postgres
      DB_PASSWORD: P@ssw0rd123!
    command: sh -c "npm install && npm run dev"
    ports:
      - "3047:3047"
    depends_on:
      - redis

  # Flow Monitoring Service (Python)
  flow-monitoring:
    image: python:3.11-alpine
    container_name: munbon-flow-monitoring
    working_dir: /app
    volumes:
      - ./services/flow-monitoring:/app
    environment:
      PORT: 3011
      DATABASE_URL: postgresql://postgres:P@ssw0rd123!@43.209.22.250:5432/munbon_dev
      REDIS_URL: redis://redis:6379
    command: sh -c "pip install -r requirements.txt && python -m uvicorn src.main:app --host 0.0.0.0 --port 3011 --reload"
    ports:
      - "3011:3011"
    depends_on:
      - redis

networks:
  default:
    name: munbon-network
    driver: bridge