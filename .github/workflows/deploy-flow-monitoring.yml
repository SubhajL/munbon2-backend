name: Deploy Flow Monitoring Service

on:
  push:
    branches:
      - main
    paths:
      - 'services/flow-monitoring/**'
  workflow_dispatch:

env:
  SERVICE_NAME: flow-monitoring
  DOCKER_IMAGE: subhaj888/munbon-flow-monitoring
  EC2_HOST: 43.208.201.191
  EC2_USER: ubuntu

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./services/flow-monitoring
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2-key.pem
        chmod 600 ~/.ssh/ec2-key.pem
        ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        # Copy environment and config files
        scp -i ~/.ssh/ec2-key.pem ./services/flow-monitoring/.env.ec2 ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:/home/ubuntu/munbon2-backend/services/flow-monitoring/.env
        scp -i ~/.ssh/ec2-key.pem ./services/flow-monitoring/src/munbon_network_final.json ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:/home/ubuntu/munbon2-backend/services/flow-monitoring/src/
        scp -i ~/.ssh/ec2-key.pem ./services/flow-monitoring/canal_geometry_template.json ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:/home/ubuntu/munbon2-backend/services/flow-monitoring/
        
        # Deploy on EC2
        ssh -i ~/.ssh/ec2-key.pem ${{ env.EC2_USER }}@${{ env.EC2_HOST }} << 'ENDSSH'
          cd /home/ubuntu/munbon2-backend
          
          # Pull latest image
          docker pull ${{ env.DOCKER_IMAGE }}:latest
          
          # Update service
          docker-compose -f docker-compose.ec2.yml stop flow-monitoring
          docker-compose -f docker-compose.ec2.yml rm -f flow-monitoring
          docker-compose -f docker-compose.ec2.yml up -d flow-monitoring
          
          # Wait for service to start
          sleep 15
          
          # Verify deployment
          docker ps | grep flow-monitoring
          curl -f http://localhost:3011/health || exit 1
        ENDSSH

    - name: Clean up
      if: always()
      run: |
        rm -rf ~/.ssh/ec2-key.pem