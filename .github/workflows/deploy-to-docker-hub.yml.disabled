name: Deploy to Docker Hub

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Test with 3 services first
          - service: sensor-data
            port: 3001
          - service: auth
            port: 3002
          - service: gis
            port: 3006

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare build for ${{ matrix.service }}
        run: |
          cd services/${{ matrix.service }}
          
          # Use the .fixed Dockerfile if it exists, otherwise create a simple one
          if [ -f "Dockerfile.fixed" ]; then
            echo "Using existing Dockerfile.fixed"
          else
            echo "Creating simple Dockerfile"
            cat > Dockerfile.build << 'EOF'
          FROM node:20-alpine
          WORKDIR /app
          COPY package*.json ./
          RUN sed -i '/@munbon\/shared/d' package.json || true
          RUN npm install --production || npm install
          COPY . .
          EXPOSE ${{ matrix.port }}
          CMD ["node", "src/index.js"]
          EOF
            mv Dockerfile.build Dockerfile.fixed
          fi

      - name: Build and push ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ./services/${{ matrix.service }}
          file: ./services/${{ matrix.service }}/Dockerfile.fixed
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/munbon-${{ matrix.service }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/munbon-${{ matrix.service }}:${{ github.sha }}

  test-deployment:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Test Docker Hub images
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo "=== Testing Docker Hub images ==="
          for service in sensor-data auth gis; do
            echo "Checking $DOCKERHUB_USERNAME/munbon-$service:latest"
            docker pull $DOCKERHUB_USERNAME/munbon-$service:latest || echo "Failed to pull $service"
          done