version: '3.8'

services:
  weather-monitoring:
    build: .
    container_name: weather-monitoring-service
    ports:
      - "3055:3055"
    environment:
      - NODE_ENV=production
      - PORT=3055
      # Databases
      - TIMESCALE_HOST=timescaledb
      - TIMESCALE_PORT=5432
      - TIMESCALE_DATABASE=aos_weather
      - TIMESCALE_USER=weather_user
      - TIMESCALE_PASSWORD=weather_password
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=weather_integration
      - POSTGRES_USER=weather_user
      - POSTGRES_PASSWORD=weather_password
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      # MQTT
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - MQTT_USERNAME=weather_user
      - MQTT_PASSWORD=mqtt_password
      # Security
      - JWT_SECRET=your-very-long-random-jwt-secret-here
      # CORS
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3001
      # Services
      - NOTIFICATION_SERVICE_URL=http://notification-service:3012
      - ALERT_SERVICE_URL=http://alert-service:3013
    depends_on:
      - postgres
      - timescaledb
      - redis
      - mosquitto
    networks:
      - weather-network
    restart: unless-stopped

  postgres:
    image: postgis/postgis:14-3.2-alpine
    container_name: weather-postgres
    environment:
      - POSTGRES_DB=weather_integration
      - POSTGRES_USER=weather_user
      - POSTGRES_PASSWORD=weather_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - weather-network
    restart: unless-stopped

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: weather-timescaledb
    environment:
      - POSTGRES_DB=aos_weather
      - POSTGRES_USER=weather_user
      - POSTGRES_PASSWORD=weather_password
    volumes:
      - timescale-data:/var/lib/postgresql/data
      - ./scripts/init-timescale.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - weather-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: weather-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - weather-network
    restart: unless-stopped

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: weather-mosquitto
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/passwd:/mosquitto/config/passwd
      - mosquitto-data:/mosquitto/data
      - mosquitto-logs:/mosquitto/log
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - weather-network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: weather-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@munbon.local
      - PGADMIN_DEFAULT_PASSWORD=admin_password
    ports:
      - "5050:80"
    networks:
      - weather-network
    restart: unless-stopped
    profiles:
      - debug

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: weather-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - weather-network
    restart: unless-stopped
    profiles:
      - debug

volumes:
  postgres-data:
  timescale-data:
  redis-data:
  mosquitto-data:
  mosquitto-logs:

networks:
  weather-network:
    driver: bridge