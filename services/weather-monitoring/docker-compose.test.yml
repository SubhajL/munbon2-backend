version: '3.8'

services:
  # Test instance of weather monitoring service
  weather-monitoring-test:
    build: .
    container_name: weather-monitoring-test
    environment:
      - NODE_ENV=test
      - PORT=3055
      - LOG_LEVEL=error
      # Test databases
      - TIMESCALE_HOST=test-timescaledb
      - TIMESCALE_PORT=5432
      - TIMESCALE_DATABASE=test_aos_weather
      - TIMESCALE_USER=test_user
      - TIMESCALE_PASSWORD=test_password
      - POSTGRES_HOST=test-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=test_weather
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      # Test Redis
      - REDIS_HOST=test-redis
      - REDIS_PORT=6379
      # Test MQTT
      - MQTT_HOST=test-mosquitto
      - MQTT_PORT=1883
      - MQTT_USERNAME=test_user
      - MQTT_PASSWORD=test_password
      # Test JWT
      - JWT_SECRET=test-jwt-secret
      # Disable external services
      - NOTIFICATION_SERVICE_URL=
      - ALERT_SERVICE_URL=
    depends_on:
      test-postgres:
        condition: service_healthy
      test-timescaledb:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    networks:
      - test-network

  # Test PostgreSQL
  test-postgres:
    image: postgres:14-alpine
    container_name: test-postgres
    environment:
      - POSTGRES_DB=test_weather
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
    volumes:
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_weather"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test TimescaleDB
  test-timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: test-timescaledb
    environment:
      - POSTGRES_DB=test_aos_weather
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
    volumes:
      - ./scripts/init-timescale.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_aos_weather"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test Redis
  test-redis:
    image: redis:7-alpine
    container_name: test-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test Mosquitto
  test-mosquitto:
    image: eclipse-mosquitto:2
    container_name: test-mosquitto
    volumes:
      - ./test/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - test-network

networks:
  test-network:
    driver: bridge