version: '3.8'

services:
  kong-database:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kongpass
    volumes:
      - kong_data:/var/lib/postgresql/data
    networks:
      - water-planning-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong:3.4-alpine
    command: kong migrations bootstrap
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
    networks:
      - water-planning-network
    restart: on-failure

  kong:
    image: kong:3.4-alpine
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PLUGINS: bundled,graphql-rate-limiting-advanced,graphql-depth-limit
      KONG_LOG_LEVEL: info
      KONG_REAL_IP_HEADER: X-Real-IP
      KONG_TRUSTED_IPS: 0.0.0.0/0
    ports:
      - "8000:8000"  # Proxy port
      - "8443:8443"  # Proxy SSL port
      - "8001:8001"  # Admin API
      - "8444:8444"  # Admin API SSL
    networks:
      - water-planning-network
    volumes:
      - ./kong/plugins:/usr/local/share/lua/5.1/kong/plugins
      - kong_logs:/var/log/kong
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10

  kong-config:
    image: kong:3.4-alpine
    depends_on:
      kong:
        condition: service_healthy
    volumes:
      - ./kong/kong-config.yaml:/config/kong.yaml:ro
    command: >
      sh -c "
        until kong config db_import /config/kong.yaml; do
          echo 'Waiting for Kong to be ready...'
          sleep 5
        done
        echo 'Kong configuration imported successfully'
      "
    environment:
      KONG_ADMIN_URL: http://kong:8001
    networks:
      - water-planning-network

  water-planning-bff-1:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=8000
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:pass@postgres:5432/water_planning
      - REDIS_URL=redis://redis:6379
      - SERVICE_INSTANCE=1
    networks:
      - water-planning-network
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  water-planning-bff-2:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=8000
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:pass@postgres:5432/water_planning
      - REDIS_URL=redis://redis:6379
      - SERVICE_INSTANCE=2
    networks:
      - water-planning-network
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgis/postgis:14-3.2-alpine
    environment:
      POSTGRES_DB: water_planning
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - water-planning-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - water-planning-network

  konga:
    image: pantsel/konga:latest
    environment:
      NODE_ENV: production
      TOKEN_SECRET: your-secret-here
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_PORT: 5432
      DB_USER: kong
      DB_PASSWORD: kongpass
      DB_DATABASE: konga
    ports:
      - "1337:1337"
    networks:
      - water-planning-network
    depends_on:
      - kong

volumes:
  kong_data:
  kong_logs:
  postgres_data:
  redis_data:

networks:
  water-planning-network:
    driver: bridge